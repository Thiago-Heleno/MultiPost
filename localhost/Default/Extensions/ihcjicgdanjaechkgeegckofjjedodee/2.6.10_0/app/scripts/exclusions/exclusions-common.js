import{EXCLUSION_ADS,EXCLUSION_MALWARE,EXCLUSION_PUPS,EXCLUSION_SCAMS}from"../app-consts";export default class ExclusionHandler{constructor(){this.EXCLUSIONS={},this.EXCLUSION_INDIVIDUAL={}}static exclusionConstantToInt(o){switch(o){case EXCLUSION_ADS:return 2;case EXCLUSION_MALWARE:return 4;case EXCLUSION_SCAMS:return 6;case EXCLUSION_PUPS:return 7}throw new Error(`${o} is not recognised`)}static exclusionIntToConstant(o){switch(o){case 2:return EXCLUSION_ADS;case 4:return EXCLUSION_MALWARE;case 6:return EXCLUSION_SCAMS;case 7:return EXCLUSION_PUPS}throw new Error(`${o} is not recognised`)}exclude(o,s){throw new Error("Cannot call this method on base class")}getExclusions(){throw new Error("Cannot call this method on base class")}exportExclusions(){throw new Error("Cannot call this method on base class")}importExclusions(o){throw new Error("Cannot call this method on base class")}getExclusions_getExclusionsByNames(o){throw new Error("Cannot call this method on base class")}removeAllExclusions(){throw new Error("Cannot call this method on base class")}removeExclude(o,s,r){throw new Error("Cannot call this method on base class")}removeExclusions(o){throw new Error("Cannot call this method on base class")}excludeTemporarily(o,s){throw new Error("Cannot call this method on base class")}isTemporarilyExcluded(o,s){throw new Error("Cannot call this method on base class")}}